{"version":3,"file":"CustomPlugin.js","sourceRoot":"","sources":["../../src/struct/CustomPlugin.ts"],"names":[],"mappings":";;;AAAA,wBAA2B;AAC3B,0BAAgC;AAGhC,oDAAoD;AAEpD;;;;GAIG;AACH,MAAsB,YAAa,SAAQ,SAAM;IAAjD;;QACE;;;;;;;;;;;;;;WAcG;QACH,SAAI,GAAG,cAAU,CAAC,MAAM,CAAC;IAyB3B,CAAC;CAAA;AAzCD,oCAyCC","sourcesContent":["import { Plugin } from \".\";\nimport { PluginType } from \"..\";\nimport type { GuildMember, GuildTextBasedChannel, VoiceBasedChannel } from \"discord.js\";\n\n// TODO: Clean parameters on the next major version.\n\n/**\n * Custom Plugin\n * @extends Plugin\n * @abstract\n */\nexport abstract class CustomPlugin extends Plugin {\n  /**\n   * This method will be executed if the url is validated.\n   * @param {Discord.BaseGuildVoiceChannel} voiceChannel The voice channel will be joined\n   * @param {string} song Validated url\n   * @param {Object} [options] Optional options\n   * @param {Discord.GuildMember} [options.member] Requested user\n   * @param {Discord.BaseGuildTextChannel} [options.textChannel] Default {@link Queue#textChannel}\n   * @param {boolean} [options.skip] Skip the playing song (if exists) and play the added song/playlist instantly\n   * @param {boolean} [options.unshift] Add the song/playlist after the playing song if exists\n   * @param {*} [options.metadata] Metadata\n   * @returns {Promise<void>}\n   * @abstract\n   * @method play\n   * @memberof CustomPlugin#\n   */\n  type = PluginType.CUSTOM;\n  /**\n   * This method will be executed if the url is validated.\n   * @param {Discord.BaseGuildVoiceChannel} voiceChannel The voice channel will be joined\n   * @param {string} song Validated url\n   * @param {Object} [options] Optional options\n   * @param {Discord.GuildMember} [options.member] Requested user\n   * @param {Discord.BaseGuildTextChannel} [options.textChannel] Default {@link Queue#textChannel}\n   * @param {boolean} [options.skip] Skip the playing song (if exists) and play the added song/playlist instantly\n   * @param {boolean} [options.unshift] Add the song/playlist after the playing song if exists\n   * @param {*} [options.metadata] Metadata\n   * @returns {Promise<void>}\n   * @abstract\n   */\n  abstract play(\n    voiceChannel: VoiceBasedChannel,\n    song: string,\n    options: {\n      skip?: boolean;\n      unshift?: boolean;\n      member?: GuildMember;\n      textChannel?: GuildTextBasedChannel;\n      metadata?: any;\n    },\n  ): Promise<void>;\n}\n"]}